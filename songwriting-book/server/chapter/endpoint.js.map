{"version":3,"file":"endpoint.js","sourceRoot":"","sources":["../../../../server/chapter/endpoint.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,IAAI,CAAC;AACpB,OAAO,IAAI,MAAM,MAAM,CAAC;AAExB,OAAO,EAAE,oBAAoB,EAAE,MAAM,aAAa,CAAC;AAEnD,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,GAAQ,EAAE,GAAQ,EAAE,EAAE;IACpD,MAAM,OAAO,GAAW,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IACvD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC;QAC7B,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IACvD,CAAC;IAED,MAAM,WAAW,GAAW,IAAI,CAAC,IAAI,CACnC,SAAS,EACT,uBAAuB,gBAAgB,CAAC,OAAO,CAAC,KAAK,CACtD,CAAC;IAEF,EAAE,CAAC,QAAQ,CACT,WAAW,EACX,OAAO,EACP,CAAC,GAAiC,EAAE,OAAe,EAAO,EAAE;QAC1D,IAAI,GAAG,EAAE,CAAC;YACR,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;gBAC1B,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YACnD,CAAC;YACD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACvD,CAAC;QAED,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;IACrD,CAAC,CACF,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,gBAAgB,GAAG,CAAC,OAAe,EAAU,EAAE;IACnD,OAAO,OAAO,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC7C,CAAC,CAAC;AAEF,MAAM,cAAc,GAAG,CAAC,OAAY,EAAW,EAAE;IAC/C,IACE,KAAK,CAAC,OAAO,CAAC;QACd,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC;QAC1B,OAAO,GAAG,CAAC;QACX,OAAO,GAAG,GAAG,EACb,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEF,MAAM,UAAU,GAAG,CAAC,OAAiB,EAAE,MAAc,EAAW,EAAE;IAChE,IAAI,MAAM,GAA6B,IAAI,CAAC;IAC5C,IAAI,IAAI,GAAuB,SAAS,CAAC;IACzC,IAAI,IAAI,GAAa,EAAE,CAAC;IAExB,KAAK,MAAM,IAAI,IAAI,OAAO,EAAE,CAAC;QAC3B,IAAI,oBAAoB,CAAC,QAAQ,CAAC,IAAyB,CAAC,EAAE,CAAC;YAC7D,MAAM,GAAG,IAAyB,CAAC;YAEnC,SAAS;QACX,CAAC;QAED,IAAI,MAAM,KAAK,YAAY,EAAE,CAAC;YAC5B,IAAI,GAAG,IAAI,CAAC;QACd,CAAC;aAAM,IAAI,MAAM,KAAK,eAAe,EAAE,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC;IACH,CAAC;IAED,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;QACvB,MAAM,KAAK,CAAC,+BAA+B,CAAC,CAAC;IAC/C,CAAC;IAED,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;QACvB,MAAM,KAAK,CAAC,kCAAkC,CAAC,CAAC;IAClD,CAAC;IAED,OAAO;QACL,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,IAAI;QACb,MAAM,EAAE,MAAM;KACf,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\nimport { Chapter, ChapterFileHeader } from \"./types\";\nimport { CHAPTER_FILE_HEADERS } from \"./constants\";\n\nexport const chapterEndpoint = (req: any, res: any) => {\n  const chapter: number = parseInt(req.params.index, 10);\n  if (!isValidChapter(chapter)) {\n    return res.status(400).send(\"Invalid chapter index\");\n  }\n\n  const chapterFile: string = path.join(\n    __dirname,\n    `../chapters/chapter-${getChapterNumber(chapter)}.sb`\n  );\n\n  fs.readFile(\n    chapterFile,\n    \"utf-8\",\n    (err: NodeJS.ErrnoException | null, content: string): any => {\n      if (err) {\n        if (err.code === \"ENOENT\") {\n          return res.status(404).send(\"Chapter not found\");\n        }\n        return res.status(500).send(\"Error reading chapter\");\n      }\n\n      res.send(getChapter(content.split(\"\\n\"), chapter));\n    }\n  );\n};\n\nconst getChapterNumber = (chapter: number): string => {\n  return chapter.toString().padStart(2, \"0\");\n};\n\nconst isValidChapter = (chapter: any): boolean => {\n  if (\n    isNaN(chapter) ||\n    !Number.isInteger(chapter) ||\n    chapter < 0 ||\n    chapter > 100\n  ) {\n    return false;\n  }\n\n  return true;\n};\n\nconst getChapter = (content: string[], number: number): Chapter => {\n  let header: ChapterFileHeader | null = null;\n  let name: string | undefined = undefined;\n  let body: string[] = [];\n\n  for (const line of content) {\n    if (CHAPTER_FILE_HEADERS.includes(line as ChapterFileHeader)) {\n      header = line as ChapterFileHeader;\n\n      continue;\n    }\n\n    if (header === \"<--NAME-->\") {\n      name = line;\n    } else if (header === \"<--CONTENT-->\") {\n      body.push(line);\n    }\n  }\n\n  if (name === undefined) {\n    throw Error(\"No name found in chapter file\");\n  }\n\n  if (body === undefined) {\n    throw Error(\"No content found in chapter file\");\n  }\n\n  return {\n    name: name,\n    content: body,\n    number: number,\n  };\n};\n"]}